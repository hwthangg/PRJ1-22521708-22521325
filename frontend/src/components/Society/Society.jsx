import React, { useState, useRef, useEffect, useState as useReactState } from 'react';
import styles from './Society.module.css';
import avatar from '../../assets/avatar.jpg'; 

const Society = ({ site }) => {
  const [showComments, setShowComments] = useState(false);
  const [showScrollButtons, setShowScrollButtons] = useReactState(false);
  const [liked, setLiked] = useState(false);
  const [likeCount, setLikeCount] = useState(site.initialLikes || 0);
  const scrollRef = useRef(null);
  const [activeMenuIndex, setActiveMenuIndex] = useState(null);

  const scrollLeft = () => {
    if (scrollRef.current) {
      scrollRef.current.scrollBy({ left: -300, behavior: 'smooth' });
    }
  };

  const scrollRight = () => {
    if (scrollRef.current) {
      scrollRef.current.scrollBy({ left: 300, behavior: 'smooth' });
    }
  };

  useEffect(() => {
    const el = scrollRef.current;
    if (el && el.scrollWidth > el.clientWidth) {
      setShowScrollButtons(true);
    } else {
      setShowScrollButtons(false);
    }
  }, [site.images]);

  const toggleLike = () => {
    setLiked(!liked);
    setLikeCount(prev => liked ? prev - 1 : prev + 1);
  };

  const handleOptionClick = (option, index) => {
    if (option === 'edit') {
      alert(`Ch·ªânh s·ª≠a b√¨nh lu·∫≠n ${index + 1}`);
    } else if (option === 'delete') {
      alert(`Xo√° b√¨nh lu·∫≠n ${index + 1}`);
    }
    setActiveMenuIndex(null);
  };

  return (
    <div className={styles.container}>
      <div className={styles.headerWrapper}>
        <img src={avatar} alt="Avatar" className={styles.avatar} />
        <div className={styles.infoSection}>
          <span className={styles.authorName}>Chi ƒëo√†n KP ƒê√¥ng A</span>
          <span className={styles.date}>11/04/2025</span>
          <span className={styles.tag}>Gi√°o d·ª•c, Ch√≠nh tr·ªã</span>
        </div>
      </div>

      <div className={styles.title}>{site.name}</div>

      {/* N·ªôi dung */}
      <div className={styles.content}>
        <div className={styles.leftColumn}>
          {/* Scroll ·∫£nh */}
          <div className={styles.imageScrollWrapper}>
            {showScrollButtons && (
              <button className={styles.scrollButton} onClick={scrollLeft}>‚Üê</button>
            )}
            <div className={styles.images} ref={scrollRef}>
              {site.images.map((img, index) => (
                <img key={index} src={img} alt={site.name} className={styles.image} />
              ))}
            </div>
            {showScrollButtons && (
              <button className={styles.scrollButton} onClick={scrollRight}>‚Üí</button>
            )}
          </div>

          {/* M√¥ t·∫£ */}
          <p className={styles.description}>{site.description}</p>

          {/* N√∫t y√™u th√≠ch v√† b√¨nh lu·∫≠n */}
          <div className={styles.buttonGroup}>
            <button
              className={styles.favoriteButton}
              style={{ color: liked ? 'red' : 'black' }}
              onClick={toggleLike}
            >
              {liked ? '‚ù§Ô∏è' : 'ü§ç'} Y√™u th√≠ch ({likeCount})
            </button>
            <button
              className={styles.commentToggleButton}
              onClick={() => setShowComments(!showComments)}
            >
              üí¨ B√¨nh lu·∫≠n
            </button>
          </div>
        </div>

        {/* B√¨nh lu·∫≠n */}
        {showComments && (
          <div className={styles.rightColumn}>
            <div className={styles.commentSection}>
              {[1, 2].map((_, index) => (
                <div key={index} className={styles.commentBlock}>
                  <img src={avatar} alt="avatar" className={styles.commentAvatar} />
                  <div className={styles.commentBubble}>
                    <strong>Chi ƒëo√†n KP ƒê√¥ng {index === 0 ? 'B' : 'A'}</strong>
                    <p>Ch√∫ng ta v·∫´n bi·∫øt r·∫±ng, l√†m vi·ªác v·ªõi m·ªôt ƒëo·∫°n vƒÉn b·∫£n d·ªÖ ƒë·ªçc v√† r√µ nghƒ©a ƒë·ªÉ g√¢y r·ªëi tr√≠ v√† c·∫£n tr·ªü vi·ªác t·∫≠p trung v√†o y·∫øu t·ªë tr√¨nh b√†y vƒÉn b·∫£n.</p>
                  </div>

                  {/* N√∫t 3 ch·∫•m */}
                  <button
                    className={styles.commentOptionsButton}
                    onClick={() => setActiveMenuIndex(index)}
                  >
                    ‚ãØ
                  </button>

                  {/* Menu t√πy ch·ªçn */}
                  {activeMenuIndex === index && (
                    <div className={styles.optionsMenu}>
                      <button onClick={() => handleOptionClick('edit', index)}>Ch·ªânh s·ª≠a</button>
                      <button onClick={() => handleOptionClick('delete', index)}>Xo√°</button>
                    </div>
                  )}
                </div>
              ))}

              {/* Nh·∫≠p b√¨nh lu·∫≠n m·ªõi */}
              <div className={styles.commentInputWrapper}>
                <input type="text" placeholder="Th√™m b√¨nh lu·∫≠n c·ªßa b·∫°n" className={styles.commentInput} />
                <button className={styles.commentSend}>‚û§</button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Society;
